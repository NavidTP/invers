const CountdownTimer = ({ timeInMillis, onCompleteText, onTextClick }) => {
  const [timeLeft, setTimeLeft] = useState(timeInMillis);

  useEffect(() => {
    setTimeLeft(timeInMillis);

    if (timeInMillis <= 0) return;

    const timerId = setInterval(() => {
      setTimeLeft((prevTime) => {
        if (prevTime <= 0) {
          clearInterval(timerId);
          return 0;
        }
        return prevTime - 1000;
      });
    }, 1000);

    return () => clearInterval(timerId);
  }, [timeInMillis]);

  // تابع فرمت برای دو رقمی کردن دقیقه و ثانیه
  const formatTime = (millis) => {
    const totalSeconds = Math.floor(millis / 1000);
    const days = Math.floor(totalSeconds / (60 * 60 * 24));
    const hours = Math.floor((totalSeconds % (60 * 60 * 24)) / (60 * 60));
    const minutes = Math.floor((totalSeconds % (60 * 60)) / 60);
    const seconds = totalSeconds % 60;

    let formattedTime = '';

    if (days > 0) formattedTime += `${days} روز `;
    if (hours > 0) formattedTime += `${hours}:`;

    // استفاده از padStart برای دو رقمی کردن دقیقه و ثانیه
    formattedTime += `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;

    return formattedTime;
  };

  return (
    <div>
      {timeLeft > 0 ? (
        <p style={{ direction: 'ltr' }}>{formatTime(timeLeft)}</p>
      ) : (
        <p onClick={onTextClick} style={{ cursor: 'pointer', color: 'blue' }}>
          {onCompleteText}
        </p>
      )}
    </div>
  );
};

export default CountdownTimer;



 const [time, setTime] = useState(120000);

  const handleReset = () => {
    console.log("reset");
    setTime(1500000);
  };

  return (
    <div>
      <CountdownTimer
        timeInMillis={time}
        onCompleteText="زمان به پایان رسید! کلیک کنید تا دوباره تنظیم شود."
        onTextClick={handleReset}
      />
    </div>
  );
